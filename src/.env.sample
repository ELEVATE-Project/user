#User Service Config

# Port on which service runs
APPLICATION_PORT = 3000

# Hostname: If the service runs in Docker, the host is the user; if not, it is localhost.
APPLICATION_HOST=user

# Service environment
APPLICATION_ENV = development

# Token secret to generate access token
ACCESS_TOKEN_SECRET = 'access-token-secret'

# Token secret to generate refresh token
REFRESH_TOKEN_SECRET = 'refresh-token-secret'

# Kafka hosted server url separated by comma
KAFKA_URL = localhost:9092

# Kafka group to which consumer belongs
KAFKA_GROUP_ID = userservice

# Kafka topic to consume data from
KAFKA_TOPIC = 'topic'

# Kafka topic to push notification data
NOTIFICATION_KAFKA_TOPIC = notificationtopic

# Internal access token for communicationcation between services via network call
INTERNAL_ACCESS_TOKEN = 'internal-access-token'

# JWT Access Token expiry In Days
ACCESS_TOKEN_EXPIRY = '1'

# JWT Refresh Token expiry In Days
REFRESH_TOKEN_EXPIRY = '183'

# Redis Host connectivity url
REDIS_HOST = 'redis://localhost:6379'

# Otp expiration time for forgetpassword or registration process
OTP_EXP_TIME = 86400

# Enable email based otp verification for registration process
ENABLE_EMAIL_OTP_VERIFICATION = true

# Api doc url
API_DOC_URL = '/api-doc'

#Internal cache expiry time
INTERNAL_CACHE_EXP_TIME = 86400

#Kafka internal communicationcation
CLEAR_INTERNAL_CACHE = 'userInternal'

#Key for email encryption 32 bit string
KEY = 'g5MQ7HG/r5gPCPQQCwfBBEduAt72ewJIY/gWc0RNoak='

#IV for email encryption 16 bit string
IV = '2lIctRkqzYMWbwlW1jCC9A=='

#Winston logging level
ERROR_LOG_LEVEL='silly'

#Disable all logs
DISABLE_LOG=false

#Secret key for create admin
ADMIN_SECRET_CODE='secret-code'

#Email template for upload status
ADMIN_INVITEE_UPLOAD_EMAIL_TEMPLATE_CODE=invitee_upload_status

#Mentoring Service URL
MENTORING_SERVICE_URL=http://localhost:3000

#Default queue for process invitee upload
DEFAULT_QUEUE=user-queue

#Email template for mentor role request accepted
MENTOR_REQUEST_ACCEPTED_EMAIL_TEMPLATE_CODE=mentor_request_accepted

#Email template for mentor role request rejected
MENTOR_REQUEST_REJECTED_EMAIL_TEMPLATE_CODE=mentor_request_rejected

#Default role
DEFAULT_ROLE="mentee,content_creator"

#sample file upload path
SAMPLE_CSV_FILE_PATH=sample/bulk_user_creation.csv

#Email template for org admin invitation
ORG_ADMIN_INVITATION_EMAIL_TEMPLATE_CODE=invite_org_admin

#Default Organization ID
DEFAULT_ORG_ID= 1

#Portal URL for signup
PORTAL_URL='https://mentored.shikshalokam.org/auth/login'

#Email id for sendig failure repots of scheduler service
SCHEDULER_SERVICE_ERROR_REPORTING_EMAIL_ID="rakesh.k@pacewisdom.com"

#Host name for scheduler service
SCHEDULER_SERVICE_HOST="http://localhost:4000"

#base URL for scheduler service
SCHEDULER_SERVICE_BASE_URL= '/scheduler/'

#Refresh interval for materialized views
REFRESH_VIEW_INTERVAL= 540000

EVENT_ORG_LISTENER_URLS='http://interface:3567/mentoring/v1/organization/eventListener'
EVENT_ENABLE_ORG_EVENTS=true
#Generic Email template for new users
GENERIC_INVITATION_EMAIL_TEMPLATE_CODE=generic_invite

# Allowed host by CORS
ALLOWED_HOST = "http://examplDomain.com"

# Downloadabale url exipres after
DOWNLOAD_URL_EXPIRATION_DURATION = 120000 #for gcloud and azure add it minutes as '1m' for aws and oci add only in seconds '60'

#database url
DATABASE_URL=postgres://postgres:postgres@localhost:5432/elevate-user

#allowed idle time
ALLOWED_IDLE_TIME=300000

# Expiry time for the signed urls
SIGNED_URL_EXPIRY_DURATION = 120000 #for gcloud and azure add it minutes as '1m' for aws and oci add only in seconds '60'

# Allowed active sessions
ALLOWED_ACTIVE_SESSIONS = 5

# Cloud storage provider in azure, aws, gcloud, oci or s3
CLOUD_STORAGE_PROVIDER=aws
# Cloud storage identity [Azure Account Name, AWS Access Key, GCP Client Email, OCI S3 Access Key or S3 Access Key]
CLOUD_STORAGE_ACCOUNTNAME=AKIAIOSFODNN7EXAMPLE
# Cloud storage secret
CLOUD_STORAGE_SECRET=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
# Cloud storage region for AWS and OCI only
CLOUD_STORAGE_REGION=ap-south-1 
# Cloud storage endpoint for S3 and OCI only
CLOUD_ENDPOINT=s3.ap-south-1.amazonaws.com
# Cloud storage default bucket name 
CLOUD_STORAGE_BUCKETNAME=private-or-public-bucket
# Cloud storage public bucket name 
PUBLIC_ASSET_BUCKETNAME=public-bucket
# Cloud storage default bucket type 
CLOUD_STORAGE_BUCKET_TYPE=private
# Base url for application 
APPLICATION_BASE_URL=/user
#scheduler service periodic job name which runs on a repeated interval to update the views
SCHEDULER_PERIODIC_JOB_NAME_USER_MVIEWS="project_users_repeatable_view_job"
#scheduler service job name to initialize the view and it is a one time job
SCHEDULER_JOB_NAME_USER_MVIEWS="BuildMaterializedViewsprojectUsers"
# Add default tenant code for existing users 
DEFAULT_TENANT_CODE='DEFAULT'
# Add default org code under each tenant
DEFAULT_TENANT_ORG_CODE="DEFAULT"
# Add default org name under each tenant
DEFAULT_TENANT_ORG_NAME="Default Organization"
# service url to entity management service 
ENTITY_MANAGEMENT_SERVICE_BASE_URL="entity-management"

#Notification mode, 'kafka' or 'api'
NOTIFICATION_MODE='kafka'

#Notification service endpoint
NOTIFICATION_API_URL='localhost:4000/notification/send-raw'